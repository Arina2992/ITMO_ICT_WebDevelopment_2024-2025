{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u0416\u0438\u0436\u0438\u043b\u0435\u0432\u0430 \u0410\u0440\u0438\u043d\u0430 WEB 3.2, \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2","text":"<p>\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0443\u0440\u043e\u0432 \u0442\u0443\u0440\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0444\u0438\u0440\u043c\u044b</p> <p>\u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u0442\u0443\u0440\u0430\u0433\u0435\u043d\u0441\u0442\u0432\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u043f\u0435\u0440\u0438\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0442\u0443\u0440\u0430, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043e\u043f\u043b\u0430\u0442\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. - \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. - \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0442\u0443\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u0442\u0443\u0440\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. - \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. - \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c.</p>"},{"location":"#_1","title":"\u0425\u043e\u0434 \u0440\u0430\u0431\u043e\u0442\u044b","text":"<ul> <li>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439</li> <li>\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u044b views</li> <li>Urls</li> <li>\u0424\u043e\u0440\u043c\u044b</li> <li>\u041f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0439\u0441\u044f \u043f\u0440\u043e\u0435\u043a\u0442</li> </ul>"},{"location":"chapter1/","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 Models","text":"<p>\u0412 \u043f\u0430\u043f\u043a\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0432 \u0444\u0430\u0439\u043b\u0435 models \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0441\u043e\u0437\u0434\u0430\u044e \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438. \u0423 \u043c\u0435\u043d\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438\u0441\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u0422\u0443\u0440\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0430\u0433\u0435\u043d\u0441\u0442\u0432\u0430, \u0422\u0443\u0440\u0430, \u0411\u0440\u043e\u043d\u0438 \u0438 \u041e\u0442\u0437\u044b\u0432\u0430. </p> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 models.py:</p> <pre><code>from django.contrib.auth.models import User\nfrom django.db import models\nfrom django.db.models import F, Avg\n\nclass TourAgency(models.Model):\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    website = models.URLField()\n    country = models.CharField(max_length=100, null=True)\n\nclass Tour(models.Model):\n    name = models.CharField(max_length=255)\n    agency = models.ForeignKey(TourAgency, on_delete=models.CASCADE, related_name='tours')\n    description = models.TextField()\n    start_date = models.DateField()\n    end_date = models.DateField()\n    price = models.DecimalField(max_digits=9, decimal_places=2)\n    payment_conditions = models.TextField()\n    available_seats = models.PositiveIntegerField(default=10)\n    average_rating = models.FloatField(null=True, blank=True)\n\n    def update_average_rating(self):\n        average = self.reviews.aggregate(average=Avg('rating'))['average']\n        self.average_rating = average if average is not None else None\n        self.save(update_fields=['average_rating'])\n\nclass Booking(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='bookings')\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name='bookings')\n    date_reserved = models.DateTimeField(auto_now_add=True)\n    is_confirmed = models.BooleanField(default=False)\n    number_of_seats = models.PositiveIntegerField(default=1)\n\n    class Meta:\n        permissions = [\n            (\"can_confirm_booking\", \"Can confirm booking\"),\n        ]\n\n    def save(self, *args, **kwargs):\n        if not self.pk:\n            original_confirmed = False\n        else:\n            original_confirmed = Booking.objects.filter(pk=self.pk).values('is_confirmed').first()['is_confirmed']\n\n        if self.is_confirmed and not original_confirmed:\n            if self.tour.available_seats &gt; 0:\n                self.tour.available_seats = F('available_seats') - 1\n                self.tour.save(update_fields=['available_seats'])\n            else:\n                raise ValueError(\"No available seats left for this tour.\")\n\n        super().save(*args, **kwargs)\n\nclass Review(models.Model):\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE, related_name='reviews')\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='reviews')\n    text = models.TextField()\n    rating = models.PositiveIntegerField()\n    created_at = models.DateTimeField(auto_now_add=True)\n\n    def save(self, *args, **kwargs):\n        super().save(*args, **kwargs)\n        self.tour.update_average_rating()\n\n    def delete(self, *args, **kwargs):\n        super().delete(*args, **kwargs)\n        self.tour.update_average_rating()\n</code></pre>"},{"location":"chapter2/","title":"\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u044b views","text":"<p>\u0414\u0430\u043b\u044c\u0448\u0435 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438. </p> <p>\u0421\u043e\u0437\u0434\u0430\u044e \u0432 \u0444\u0430\u0439\u043b\u0435 views.py (\u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f) \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 (\u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f.  \u0412\u0441\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u044b \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u044e \u0441 html \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0430\u043c\u0438.</p> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 view.py:</p> <pre><code>from django.contrib import messages\nfrom django.contrib.auth import logout\nfrom django.contrib.auth import login, authenticate\nfrom django.contrib.auth.forms import AuthenticationForm\nfrom django.shortcuts import render, redirect, get_object_or_404\nfrom django.contrib.auth.decorators import login_required\nfrom .forms import UserRegistrationForm, BookingForm, ReviewForm, TourFilterForm\nfrom .models import Tour, Booking\nfrom django.db.models import Count\n\n# Create your views here.\ndef login_view(request):\n    if request.method == 'POST':\n        form = AuthenticationForm(request, data=request.POST)\n        if form.is_valid():\n            username = form.cleaned_data.get('username')\n            password = form.cleaned_data.get('password')\n            user = authenticate(request, username=username, password=password)\n            if user is not None:\n                login(request, user)\n                # \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a 'next' \u0438\u043b\u0438 \u043d\u0430 'tour_list' \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n                next_url = request.GET.get('next', 'tour_list')\n                return redirect(next_url)\n            else:\n                messages.error(request, \"Invalid username or password.\")\n        else:\n            messages.error(request, \"Invalid username or password.\")\n    else:\n        form = AuthenticationForm()\n    return render(request, 'log_in.html', {'form': form})\n\ndef register(request):\n    if request.method == 'POST':\n        form = UserRegistrationForm(request.POST)\n        if form.is_valid():\n            user = form.save(commit=False)\n            user.set_password(form.cleaned_data['password'])\n            user.save()\n            login(request, user)\n            return redirect('tour_list')\n    else:\n        form = UserRegistrationForm()\n    return render(request, 'register.html', {'form': form})\n\ndef tour_list(request):\n    tours = Tour.objects.filter(available_seats__gt=0)  # Only get tours with available seats\n    form = TourFilterForm(request.GET)\n    if form.is_valid():\n        name = form.cleaned_data.get('name')\n        start_date = form.cleaned_data.get('start_date')\n        end_date = form.cleaned_data.get('end_date')\n        if name:\n            tours = tours.filter(name__icontains=name)\n        if start_date:\n            tours = tours.filter(start_date__gte=start_date)\n        if end_date:\n            tours = tours.filter(end_date__lte=end_date)\n    context = {\n        'tours': tours,\n        'form': form\n    }\n    return render(request, 'tour_list.html', context)\n\n\ndef sold_tours_by_country(request):\n    # Fetch sold out tours (those with no available seats)\n    sold_tours = Tour.objects.filter(available_seats=0)\n\n    context = {\n        'sold_tours': sold_tours  # Pass the sold tours to the context\n    }\n    return render(request, 'sold_tours_by_country.html', context)\n\n@login_required(login_url='register')  # \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\ndef tour_detail(request, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n    booking = Booking.objects.filter(user=request.user, tour=tour, is_confirmed=True).first()\n    reviews = tour.reviews.all()\n    context = {\n        'tour': tour,\n        'agency': tour.agency,\n        'reviews': reviews,\n        'average_rating': tour.average_rating if tour.average_rating is not None else \"No reviews yet\",\n        'booking_confirmed': booking is not None,\n    }\n    return render(request, 'tour_info.html', context)\n@login_required\ndef add_review(request, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n    booking = Booking.objects.filter(user=request.user, tour=tour, is_confirmed=True).first()\n    if not booking:\n        messages.error(request, \"You can't add a review, your booking is not confirmed.\")\n        return redirect('tour_detail', tour_id=tour_id)\n    if request.method == 'POST':\n        form = ReviewForm(request.POST)\n        if form.is_valid():\n            review = form.save(commit=False)\n            review.user = request.user\n            review.tour = tour\n            review.save()\n            messages.success(request, \"Thank you for your review.!\")\n            return redirect('tour_detail', tour_id=tour_id)\n    else:\n        form = ReviewForm()\n\n    return render(request, 'add_review.html', {'form': form, 'tour': tour})\n\n\n@login_required\ndef book_tour(request, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n\n    # Check if there are available seats\n    if tour.available_seats &gt; 0:\n        if request.method == 'POST':\n            form = BookingForm(request.POST)\n            if form.is_valid():\n                booking = form.save(commit=False)\n                booking.user = request.user\n                booking.tour = tour\n                booking.save()\n                tour.available_seats -= 1\n                tour.save()\n                messages.success(request, \"Tour booked successfully!\")\n                return redirect('tour_list')\n        else:\n            form = BookingForm()\n    else:\n        # If no seats available, allow booking\n        if request.method == 'POST':\n            form = BookingForm(request.POST)\n            if form.is_valid():\n                booking = form.save(commit=False)\n                booking.user = request.user\n                booking.tour = tour\n                booking.save()\n                messages.info(request, \"Tour sold out, but your booking is recorded.\")\n                return redirect('tour_list')\n        else:\n            form = BookingForm()\n\n    return render(request, 'book_tour.html', {'form': form, 'tour': tour})\n\n@login_required\ndef add_review(request, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n    if request.method == 'POST':\n        form = ReviewForm(request.POST)\n        if form.is_valid():\n            review = form.save(commit=False)\n            review.user = request.user\n            review.tour = tour\n            review.save()\n            return redirect('tour_detail', tour_id=tour_id)\n    else:\n        form = ReviewForm()\n    return render(request, 'add_review.html', {'form': form, 'tour': tour})\n\n@login_required\ndef my_bookings(request):\n    bookings = Booking.objects.filter(user=request.user)\n    return render(request, 'my_bookings.html', {'bookings': bookings})\n\n@login_required\ndef edit_booking(request, booking_id):\n    booking = get_object_or_404(Booking, id=booking_id, user=request.user)\n    if request.method == 'POST':\n        form = BookingForm(request.POST, instance=booking)\n        if form.is_valid():\n            form.save()\n            return redirect('my_bookings')\n    else:\n        form = BookingForm(instance=booking)\n    return render(request, 'edit_booking.html', {'form': form})\n\n@login_required\ndef delete_booking(request, booking_id):\n    booking = get_object_or_404(Booking, id=booking_id, user=request.user)\n    if request.method == 'POST':\n        booking.delete()\n        return redirect('my_bookings')\n    return render(request, 'delete_booking.html', {'booking': booking})\n\n@login_required\ndef add_review(request, tour_id):\n    tour = get_object_or_404(Tour, id=tour_id)\n    if request.method == 'POST':\n        form = ReviewForm(request.POST)\n        if form.is_valid():\n            review = form.save(commit=False)\n            review.user = request.user\n            review.tour = tour\n            review.save()\n            return redirect('tour_detail', tour_id=tour.id)\n    else:\n        form = ReviewForm()\n    return render(request, 'add_review.html', {'form': form, 'tour': tour})\n\ndef custom_logout(request):\n    logout(request)\n    return redirect('tour_list')\n</code></pre>"},{"location":"chapter3/","title":"Urls","text":"<p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0444\u0430\u0439\u043b \u0430\u0434\u0440\u0435\u0441\u043e\u0432 urls.py \u0432 \u043f\u0430\u043f\u043a\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</p> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 urls.py \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 \u0441 settings.py:</p> <pre><code>from django.contrib import admin\nfrom django.urls import path, include\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('Zhizhileva_tour_firm.urls')),\n]\n</code></pre> <p>\u0414\u0430\u043b\u0435\u0435 \u0441\u043e\u0437\u0434\u0430\u044e \u0444\u0430\u0439\u043b urls.py \u0432 \u043f\u0430\u043f\u043a\u0435 \u0441 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u043c.</p> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 urls.py \u0434\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:</p> <pre><code>from django.urls import path\nfrom django.contrib.auth.views import LoginView\nfrom . import views\n\nurlpatterns = [\n    path('', views.tour_list, name='tour_list'),\n    path('register/', views.register, name='register'),\n    path('login/', LoginView.as_view(template_name='log_in.html'), name='login'),\n    path('logout/', views.custom_logout, name='logout'),\n    path('book/&lt;int:tour_id&gt;/', views.book_tour, name='book_tour'),\n    path('review/&lt;int:tour_id&gt;/', views.add_review, name='add_review'),\n    path('tour/&lt;int:tour_id&gt;/', views.tour_detail, name='tour_detail'),\n    path('my_bookings/', views.my_bookings, name='my_bookings'),\n    path('edit_booking/&lt;int:booking_id&gt;/', views.edit_booking, name='edit_booking'),\n    path('delete_booking/&lt;int:booking_id&gt;/', views.delete_booking, name='delete_booking'),\n    path('add_review/&lt;int:tour_id&gt;/', views.add_review, name='add_review'),\n    path('sold_tours/', views.sold_tours_by_country, name='sold_tours_by_country')\n]\n</code></pre>"},{"location":"chapter4/","title":"\u0424\u043e\u0440\u043c\u044b","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u044e \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0438 \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u0442\u0443\u0440\u043e\u0432. </p> <p>\u043a\u043e\u0434 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 forms.py:</p> <pre><code>from django import forms\nfrom django.contrib.auth.models import User\nfrom .models import Booking, Review\n\nclass UserRegistrationForm(forms.ModelForm):\n    password = forms.CharField(widget=forms.PasswordInput)\n    password_confirm = forms.CharField(widget=forms.PasswordInput, label=\"Confirm Password\")\n\n    class Meta:\n        model = User\n        fields = ['username', 'email', 'password', 'password_confirm']\n\n    def clean(self):\n        cleaned_data = super().clean()\n        password = cleaned_data.get(\"password\")\n        password_confirm = cleaned_data.get(\"password_confirm\")\n\n        if password and password_confirm and password != password_confirm:\n            self.add_error('password_confirm', \"Passwords do not match.\")\n        return cleaned_data\n\nclass BookingForm(forms.ModelForm):\n    number_of_seats = forms.IntegerField(min_value=1, label=\"Number of Seats\")\n\n    class Meta:\n        model = Booking\n        fields = ['number_of_seats']\n\nclass ReviewForm(forms.ModelForm):\n    rating = forms.IntegerField(min_value=1, max_value=10)\n\n    class Meta:\n        model = Review\n        fields = ['text', 'rating']\n\nclass TourFilterForm(forms.Form):\n    name = forms.CharField(required=False, label=\"Tour name\", max_length=100)\n    start_date = forms.DateField(required=False, label=\"Start date\", widget=forms.DateInput(attrs={'type': 'date'}))\n    end_date = forms.DateField(required=False, label=\"End date\", widget=forms.DateInput(attrs={'type': 'date'}))\n</code></pre>"},{"location":"chapter5/","title":"\u041f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0439\u0441\u044f \u043f\u0440\u043e\u0435\u043a\u0442","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u044e \u043f\u0440\u043e\u0435\u043a\u0442 \u0438 \u0437\u0430\u0445\u043e\u0436\u0443 http://127.0.0.1:8000/ \u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u0443\u0440\u0430\u0445, \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440.  \u041f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0443\u0440\u0430\u0445, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d, \u0435\u0433\u043e \u043f\u0435\u0440\u0435\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438.  \u041c\u043e\u0436\u043d\u043e \u0432\u043e\u0439\u0442\u0438 \u0432 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0430\u043a\u043a\u0430\u0443\u043d\u0442  \u041f\u043e\u0441\u043b\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043c\u044b \u0441\u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0443\u0440\u0430\u0445 \u0438 \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0443\u0440.   \u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0431\u0440\u043e\u043d\u0438 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043c\u0435\u0441\u0442\u0430.  \u041f\u043e\u0441\u043b\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043d\u0430\u0448 \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u0438 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.  \u0412 \u043d\u0430\u0448\u0435\u043c \u043f\u0440\u043e\u0444\u0438\u043b\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0435\u0433\u043e.    \u041d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u0432\u0441\u0435\u0445 \u0442\u0443\u0440\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0444\u0438\u0440\u043c.  \u0427\u0435\u0440\u0435\u0437 \u0430\u0434\u043c\u0438\u043d\u043a\u0443 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0431\u0440\u043e\u043d\u0438 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 is confirmed  \u041f\u043e\u0441\u043b\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0443\u0440\u0430, \u043a\u043e\u0433\u0434\u0430 \u0430\u0434\u043c\u0438\u043d \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442 \u043d\u0430\u0448 \u0442\u0443\u0440, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0442\u0437\u044b\u0432, \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0442\u0443\u0440\u0430 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043a\u043d\u043e\u043f\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0442\u0437\u044b\u0432.  \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430.  </p>"}]}